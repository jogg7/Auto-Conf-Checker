#!/bin/bash

# Uncomment the line below for debugging output
 #set -o xtrace

#======================
function initialize() 
{
    
    #report_file="report.html"
    #echo "<html><body>" > "$report_file"
	
    num_correct=0
    num_conf=0
    CONFDIR=${CONFDIR:-/home/jogg/comp_421_24s_jogg/proj01/conf}


   PROJ01_DIR='/home/jogg/comp_421_24s_jogg/proj01/'

   report_file="$PROJ01_DIR/report.html"
   echo "<html><body>" > "$report_file"


    
    echo "<h1>Configuration File Checker Report for [$CONFDIR]</h1>" >> "$report_file"
    echo "<table>" >> "$report_file"
    echo "<tr><th>File</th><th>Pass</th><th>Reason</th></tr>" >> "$report_file"

    cd "$CONFDIR" || exit 2



}

#======================
function choose_conf() {

    confs=($(ls))  

    
    PS3='Choose a configuration directory from the following list: '
    select Conf in ${confs[*]}; do
        if [ -z  "$Conf" ]; then
                echo 'No configuration directory chosen. Bye' >&2
                exit 1
        fi

    
    if [ ! -x "$Conf" ]; then
    	echo "$Conf is not an executable program. Bye" >&2
    	exit 2
    fi

        echo $Conf
        return 0
done
}

#=====================
function check_conf() {

    
    if [ ! -f ".info" ]; then
        echo "Fatal Error. .info file does not exist. Bye" >&2 
	2>>check_conf.txt
        return 1
    fi



        required="$(cut -d: -f1 .info)"
        sudo_needed="$(cut -d: -f2 .info)"
        files="$(cut -d: -f3 .info)"
        cmd="$(cut -d: -f4 .info)"


	

    if [ ! -f "$required" ]; then
         echo "Error: Configuration test command '$required' does not exist. Bye"
        exit 2
  fi

	
    if [ ! -x "$required" ]; then
        echo "Fatal Error. Configuration test command '$required' is not executable. Bye" >&2
        exit 2
    fi



	file_list=($(echo "$files" | tr ',' ' '))
	num_conf="${#file_list[@]}"



	
    for file in "${file_list[@]}"; do
        if [ ! -e "$file" ]; then
            echo "Missing file $file from .info " >&2
            continue
        fi

        execute=$(echo "$cmd" | sed "s|@filepath|$(pwd)/$file|")

	


	if [ "$sudo_needed" = "yes" ]; then
            eval "sudo $execute" >/dev/null 2>&1
        else
            eval "$execute" >/dev/null 2>&1
        fi



        res=$?

	

        if [ $res -eq 0 ]; then
            ((num_correct++))
            echo "Configuration file $file passed test."
		

	    echo "<tr><td>$file</td><td><b>PASS</b></td><td>Configuration test successful.</td></tr>" >> "$report_file"
        
    else
            echo "Configuration file $file failed test."

	    echo "<tr><td>$file</td><td><b>FAIL</b></td><td>Configuration test failed.</td></tr>" >> "$report_file"



        fi
    done
}

function summarize(){
	

    if [ $num_conf -gt 0 ]; then
        echo "Out of $num_conf configuration files, $num_correct were successful."
    fi


    echo "</table>" >> "$report_file"
    echo "<br><br>Generated by my glorious PROJ01 script!" >> "$report_file"
    echo "</body></html>" >> "$report_file"
}

#Main

 initialize

 conf=$(choose_conf)
 [[ $? -eq 0 ]] || exit 2
 cd $conf || exit 2
 check_conf


 summarize







